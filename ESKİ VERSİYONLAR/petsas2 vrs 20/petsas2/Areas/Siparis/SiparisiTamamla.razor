@* eksik *@
@page "/siparis/SiparisiTamamla"
@* sf1 : adres ve ürün onayı*@
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "User")]
@using MudBlazor
@using petsas2.Models

@using petsas2.Services
@using petsas2.Services.Interface
@inject ISepetService SepetService
@inject IHesapService HesapService
@inject IAdresService AdresService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudGrid GutterSize="2">
    <MudItem xs="12">
        <MudTextField T="string"
                      Value="ReadOnly"
                      Label="Şu Anda Buradasınız"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudItem>
</MudGrid>
@* https://mdbootstrap.com/docs/standard/extended/shopping-carts/#! *@
@* cssini değiştiremedim *@
<section class="h-100 h-custom" style="background-color: #eee;">
    <div class="container h-100 py-5">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col">
                <div class="card shopping-cart" style="border-radius: 15px;">
                    <div class="card-body">
                        <div class="row">
                            @* Ürünler *@
                            <div class="col-lg-6 px-5 py-4">
                                <h3 class="mb-5 pt-2 text-center fw-bold text-uppercase">Ürünleriniz</h3>
                                @* sepeptten urunleri cek *@

                                @if (sepet?.Urunler == null || !sepet.Urunler.Any())
                                {
                                    <p>Sepetinizde ürün bulunmamaktadır.</p>
                                }
                                else
                                {
                                    @foreach (var urun in sepet.Urunler)
                                    {
                                        <div class="d-flex align-items-center mb-5">
                                            <div class="flex-shrink-0">
                                                <img src="@urun.Gorsel" class="img-fluid" style="width: 150px;" alt="Ürün görseli">
                                            </div>
                                            <div class="flex-grow-1 ms-3">
                                                <h5 class="text-primary">@urun.UrunAd</h5>
                                                <div class="d-flex align-items-center">
                                                    <p class="fw-bold mb-0 me-5 pe-3">@($"{urun.BrutFiyat:N2}TL")</p>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <div class="d-flex justify-content-between p-2 mb-2 bg-primary text-white">
                                        <h5 class="fw-bold mb-0">Toplam:</h5>
                                        <h5 class="fw-bold mb-0">@($"{sepet.SepetToplamTutar:N2} TL")</h5>
                                    </div>
                                }
                            </div>

                            @* adres *@
                            <div class="col-lg-6 px-5 py-4">
                                <h3 class="mb-5 pt-2 text-center fw-bold text-uppercase">Adres Onayı</h3>
                                <form class="mb-5">
                                    @if (adresVarMi)
                                    {
                                        <div class="alert alert-secondary">
                                            <strong>@adres.AdresAdi</strong><br />
                                            @adres.Il.IlAd  /   @adres.Ilce.IlceAd<br />
                                            Açık Adres : @adres.AcikAdres
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-warning">
                                            Lütfen sipariş için adres bilgilerinizi profilinizden doldurunuz.
                                        </div>
                                    }

                                </form>
                            </div>
                            @*adres *@

                            <MudStack>
                                <MudButton Class="pa-3" Variant="Variant.Filled" Color="Color.Primary"
                                           OnClick="@OdemeyeGec">
                                    Ürünleri ve Adresini Onayla
                                </MudButton>

                                <MudButton Class="pa-3" Variant="Variant.Filled" Color="Color.Warning"
                                           OnClick="@Iptal">
                                    İptal
                                </MudButton>
                            </MudStack>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    public string ReadOnly { get; set; } = "Siparişi Tamamla: Ürün ve Adres Onayı";

    //sepetteki ürünleri getir
    private KullaniciSepet sepet;

    //Adres icin
    private Siparis siparis = new();
    private bool adresVarMi = false;
    private AdresBilgileri adres;

    //-
    protected override async Task OnInitializedAsync()
    {
        //adres kontrolu ve onayi
        var hesap = await HesapService.GetCurrentUserHesapAsync();
        if (hesap != null)
        {
            var adresList = await AdresService.GetAdresByHesapIdAsync(hesap.HBId);
            adres = adresList.FirstOrDefault();

            adresVarMi = adres != null;

            //-
            // if (adresVarMi)
            // {
            //     siparis.AdresId = adres.ABId;
            // }
        }

        //sepetteki urunleri getir
        sepet = await SepetService.SepetUrunleriAsync(); //+
    }

    //-
    // odeme islemine gec
    private async Task OdemeyeGec()
    {
        // await SiparisService.SiparisOlusturAsync(siparisModel);
        Snackbar.Add("Ödeme işlemine geçildi.", Severity.Info);
        Navigation.NavigateTo("/siparis/OdemeIslemi");
    }
    //--------------------------------------------------------------------------------------------
    //iptal-dashboarda gideriko
    private async Task Iptal()
    {
        Snackbar.Add("Sipariş işlemleri iptal edildi.", Severity.Warning);
        Navigation.NavigateTo("/user/Userdashboard");
    }
    //--------------------------------------------------------------------------------------------
}