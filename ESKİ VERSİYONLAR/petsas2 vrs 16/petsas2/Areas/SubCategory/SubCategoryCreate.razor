@page "/subcategory/SubCategoryCreate"
@attribute [Authorize(Roles = "Admin")]

@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using petsas2.Models
@using petsas2.Services.Interface

@inject ISubCategoryService SubCategoryService
@inject ICategoryService CategoryService
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudGrid GutterSize="2">
    <MudItem xs="12">
        <MudTextField T="string"
                      Value="ReadOnly"
                      Label="Şu Anda Buradasınız"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudItem>
</MudGrid>

<MudPaper Class="p-4 mx-auto" Style="max-width:600px">
    <MudForm>
        <!-- 1. MudSelect: T ve Value tipleri mutlaka eşleşmeli -->
        <MudSelect T="int"
                   Label="Kategori"
                   @bind-Value="selectedCategoryId"
                   Required="true"
                   Class="mb-4">
            <MudSelectItem Value="0" Disabled="true">Seçiniz</MudSelectItem>
            @foreach (var cat in categories)
            {
                <MudSelectItem Value="@cat.Id">@cat.PetType</MudSelectItem>
            }
        </MudSelect>

        <!-- 2. Alt kategori adı -->
        <MudTextField @bind-Value="newSubCategoryName"
                      Label="Alt Kategori Adı"
                      Required="true"
                      Immediate="true"
                      Class="mb-4" />

        <!-- 3. Butonlar: İçerik child content olarak yazılmalı -->
        <div class="mt-4 d-flex gap-2">
            <MudButton Color="Color.Secondary"
                       OnClick="@(() => Navigation.NavigateTo("/subcategory/SubCategoryIndex"))">
                İptal
            </MudButton>
            <MudButton Color="Color.Primary"
                       Disabled="@(!CanSave)"
                       OnClick="SaveSubCategory">
                Kaydet
            </MudButton>
        </div>
    </MudForm>
</MudPaper>

@code {
    public string ReadOnly { get; set; } = "Yeni Alt Kategori Ekle";

    // 0 = “Seçiniz” demek, gerçek Id’ler 1+ olacak
    private int selectedCategoryId = 0;
    private string newSubCategoryName = "";

    private List<Category> categories = new();
    private List<SubCategory> existingSubCategory = new();

    private bool CanSave =>
        !string.IsNullOrWhiteSpace(newSubCategoryName)
        && selectedCategoryId > 0;

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetAllAsync();
        existingSubCategory = await SubCategoryService.GetAllAsync();
    }

    private async Task SaveSubCategory()
    {
        var nameNorm = newSubCategoryName.Trim().ToLower();
        if (existingSubCategory.Any(sc =>
              sc.ProductName.Trim().ToLower() == nameNorm
           && sc.CategoryId == selectedCategoryId))
        {
            Snackbar.Add("Bu isimde zaten aynı kategori altında bir alt kategori mevcut.", Severity.Warning);
            return;
        }

        var newSub = new SubCategory
            {
                ProductName = newSubCategoryName.Trim(),
                CategoryId = selectedCategoryId
            };

        await SubCategoryService.AddAsync(newSub);
        Snackbar.Add("Yeni alt kategori başarıyla eklendi.", Severity.Success);
        Navigation.NavigateTo("/subcategory/SubCategoryIndex");
    }
}
