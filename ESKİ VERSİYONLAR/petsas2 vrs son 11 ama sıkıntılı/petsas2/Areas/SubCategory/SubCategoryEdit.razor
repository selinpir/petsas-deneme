@page "/subcategory/SubcategoryEdit/{id:int}"

@using petsas2.Services

@attribute [Authorize(Roles = "Admin")]
@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using petsas2.Models
@using petsas2.Services.Interface
@using static MudBlazor.Icons.Material
@inject ISubCategoryService SubCategoryService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudGrid Gutter="Gutter.Def">
    <MudItem xs="12">
        <MudTextField T="string"
                      Value="ReadOnly"
                      Label="Şu Anda Buradasınız"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudItem>
</MudGrid>

@if (subcategory == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudPaper Class="p-4">
        <MudTextField @bind-Value="subcategory.ProductName" Label="Alt Kategori Adı" Variant="Variant.Outlined" />

        <div class="mt-3 d-flex gap-2">
            <MudButton Color="Color.Secondary" OnClick="Cancel">İptal</MudButton>
            <MudButton Color="Color.Primary" OnClick="UpdateSubCategory">Güncelle</MudButton>
        </div>
    </MudPaper>
}


@code {

    public string ReadOnly { get; set; } = "Alt Kategori Güncelle";
    [Parameter]
    public int id { get; set; }
    private SubCategory? subcategory;

    protected override async Task OnInitializedAsync()
    {
        subcategory = await SubCategoryService.GetByIdAsync(id);
    }


    private async Task UpdateSubCategory()
    {
        if (subcategory == null)
            return;

        try
        {
            await SubCategoryService.Update(subcategory!);
            Snackbar.Add("Kategori başarıyla güncellendi.", Severity.Success);
            Navigation.NavigateTo("/subcategory/SubCategoryIndex");
        }
        catch (Exception ex)
        {

            Snackbar.Add(ex.Message, Severity.Error);
        }
    }
    //iptal
    private void Cancel()
    {
        Navigation.NavigateTo("/subcategory/SubCategoryIndex");
    }
}