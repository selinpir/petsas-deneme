@page "/urunler"
@page "/urunler/{Category}"
@page "/urunler/{Category}/{SubCategory}"

@using MudBlazor
@using petsas2.Services
@using petsas2.Components.Pages.Shared
@using petsas2.Models
@using petsas2.Services.Interface
@inject IProductService ProductService
@inject NavigationManager NavigationManager

@* //sepete ekleme işlemleri *@
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar
@inject ISepetService SepetService
@* //sepete ekleme işlemleri *@

<div class="container mt-4">
    <div class="row">
        @foreach (var product in Products)
        {
            <div class="col-12 col-sm-6 col-md-4 mb-4">
                <ProductGenel Name="@product.Name"
                              DetailUrl="@($"/urunDetay/{product.Id}")"
                              ImageUrl1="@product.ImageUrl"
                              BrutFiyat="@(product.Pricings.LastOrDefault()?.BrutFiyat ?? 0)"
                              DetayaGit="@(() => DetayaGit(product.Id))"
                              SepeteEkle="@(() => SepeteEkle(product.Id))"
                              Stock="@product.Stock"
                              MinStock="@product.MinStock" />
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public string Category { get; set; }
    [Parameter] public required string SubCategory { get; set; }
    public List<Product> Products { get; set; } = new();

    //OnInitializedAsync yerine OnParametersSetAsync
    protected override async Task OnParametersSetAsync()
    {
        Products = await ProductService.GetProductsAsync(Category, SubCategory);
    }
    void DetayaGit(int productId)
    {
        NavigationManager.NavigateTo($"/urunDetay/{productId}");
    }
    //sepete ekleme işlemleri
    private async Task SepeteEkle(int productId)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            Snackbar.Add("Sepete eklemek için giriş yapmanız gerekmektedir.", Severity.Warning);
            return;
        }
        var sonuc = await SepetService.SepeteEkleAsync(productId);

        if (sonuc)
        {
            Snackbar.Add("Ürün sepete eklendi!", Severity.Success);
            NavigationManager.NavigateTo("/user/sepetim");
        }
        else
        {
            Snackbar.Add("Ürünü sepete sadece müşteriler (user) ekleyebilir.", Severity.Error);
        }
    }
    //sepete ekleme işlemleri
}