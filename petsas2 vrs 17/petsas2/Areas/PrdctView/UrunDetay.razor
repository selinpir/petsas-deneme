@page "/urunDetay/{productId:int}"

@using MudBlazor
@using petsas2.Services
@using petsas2.Components.Pages.Shared
@using petsas2.Models
@using petsas2.Services.Interface

@inject IProductService ProductService
@inject NavigationManager NavigationManager

@* //sepete ekleme işlemleri *@
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar
@inject ISepetService SepetService
@* //sepete ekleme işlemleri *@

<div class="container mt-4">
    <div class="row">
        @if (product != null)
        {
            <ProductDetay Name="@product.Name"
                          Description="@product?.Description"
                          ImageUrl1="@product.ImageUrl"
                          BrutFiyat="@(product.Pricings.LastOrDefault()?.BrutFiyat ?? 0)"
                          Category="@product.Category"
                          SubCategory="@product.SubCategory"
                          Brand="@product.Brand"
                          Barcode="@product.Barcode"
                          ExpirationDate="@product.ExpirationDate"
                          Color="@product.Color"
                          Weight="@product.Weight"
                          Dimensions="@product.Dimensions"
                          Size="@product.Size"
                          Material="@product.Material"
                          SepeteEkle="@(() => SepeteEkle(product.Id))" />
        }
        else
        {
            <p>Ürün Bulunamadı :( </p>
        }
    </div>
</div>

@code {
    [Parameter] public int productId { get; set; }
    private Product product;

    //sepete ekleme işlemleri
    private async Task SepeteEkle(int productId)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            Snackbar.Add("Sepete eklemek için giriş yapmanız gerekmektedir.", Severity.Warning);
            return;
        }
        var sonuc = await SepetService.SepeteEkleAsync(productId);

        if (sonuc)
        {
            Snackbar.Add("Ürün sepete eklendi!", Severity.Success);
            NavigationManager.NavigateTo("/user/sepetim");
        }
        else
        {
            Snackbar.Add("Ürünü sepete sadece müşteriler (user) ekleyebilir.", Severity.Error);
        }
    }
    //sepete ekleme işlemleri

    //OnInitializedAsync yerine OnParametersSetAsync
    protected override async Task OnParametersSetAsync()
    {
        product = await ProductService.GetByIdAsync(productId);
    }
}