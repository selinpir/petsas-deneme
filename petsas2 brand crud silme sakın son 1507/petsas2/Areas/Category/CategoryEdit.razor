@page "/category/CategoryEdit/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using petsas2.Services

@attribute [Authorize(Roles = "Admin,Supplier")]
@using MudBlazor
@using petsas2.Models
@using petsas2.Services.Interface
@using static MudBlazor.Icons.Material
@inject ICategoryService CategoryService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<h3>Kategori Güncelle</h3>

@if (category == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudPaper Class="p-4">
        <MudTextField @bind-Value="category.PetType" Label="Kategori Adı" Variant="Variant.Outlined" />

        <div class="mt-3 d-flex gap-2">
            <MudButton Color="Color.Secondary" OnClick="Cancel">İptal</MudButton>
            <MudButton Color="Color.Primary" OnClick="UpdateCategory">Güncelle</MudButton>
        </div>
    </MudPaper>
}

@code{
    [Parameter]
    public int id { get; set; }
    private Category? category;

    protected override async Task OnInitializedAsync()
    {
        category = await CategoryService.GetByIdAsync(id);
    }

    // private async Task UpdateCategory()
    // {
    //     if(category != null)
    //     {
    //         await CategoryService.UpdateAsync(category);
    //         Navigation.NavigateTo("/Category/CategoryIndex");
    //     }
    // }
    
    private async Task UpdateCategory()
    {
        if (category == null)
            return;

        try
        {
            await CategoryService.UpdateAsync(category!);
            Snackbar.Add("Kategori başarıyla güncellendi.", Severity.Success);
            Navigation.NavigateTo("/Category/CategoryIndex");
        }
        catch (Exception ex)
        {
            // Burada circuit çökmez, kullanıcıya Snackbar mesajı gidip işlem devam eder
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }


    //iptal
    private void Cancel()
    {
        Navigation.NavigateTo("/Category/CategoryIndex");
    }
}