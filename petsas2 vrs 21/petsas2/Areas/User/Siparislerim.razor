@page "/user/Siparislerim"

@using MudBlazor
@using System.ComponentModel.DataAnnotations
@using petsas2.Models
@using petsas2.Services.Interface
@attribute [Authorize]
@attribute [Authorize(Roles = "User")];
@using Microsoft.AspNetCore.Authorization

@inject IHesapService HesapService
@inject ISiparisService SiparisService

@inject NavigationManager Navigation
@inject MudBlazor.ISnackbar Snackbar

<MudGrid Gutter="Gutter.Def">
    <MudItem xs="12">
        <MudTextField T="string"
                      Value="ReadOnly"
                      Label="Şu Anda Buradasınız"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudItem>
</MudGrid>


<MudTable Items="Siparisler" Elevation="2">
    <HeaderContent>
        <MudTh>Sipariş No</MudTh>
        <MudTh>Tarih</MudTh>
        <MudTh>Tutar</MudTh>
        <MudTh>Durum</MudTh>
        @* <MudTh>Fatura</MudTh> *@
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.SiparisNo</MudTd>
        <MudTd>@context.SiparisTarihi.ToShortDateString()</MudTd>
        <MudTd>@context.S_ToplamTutar.ToString("C")</MudTd>
        <MudTd>@context.SiparisDurumu.ToString()</MudTd>

        @*
            hatalı
        <MudTd>
            <MudButton OnClick="@(() => FaturaGosterAsync(context.SiparisId))">
                Fatura Görüntüle
            </MudButton>
        </MudTd>
        *@

        @* <MudTd>
            <MudButton OnClick="async () => await FaturaGosterAsync(context.SiparisID)">
                Fatura Görüntüle
            </MudButton>
        </MudTd> *@
    </RowTemplate>
</MudTable>
@* 
fatura eklenecek
 *@
@code {
    public string ReadOnly { get; set; } = "Siparişlerim";
    private List<Siparis> Siparisler = new();

    protected override async Task OnInitializedAsync()
    {
        var HBId = await HesapService.GetCurrentUserHesapAsync();
        Siparisler = await SiparisService.GetKullaniciSiparisleriAsync(HBId.HBId);
    }


    // private async Task FaturaGosterAsync(int siparisId)
    // {
    //     var siparis = await SiparisService.GetSiparisByIdAsync(siparisId);
    //     if (siparis != null && siparis.Fatura != null)
    //     {
    //         var faturaNo = siparis.Fatura.FaturaNo.ToString();
    //         Navigation.NavigateTo($"/siparis/FaturaGoruntule/{faturaNo}");
    //     }
    //     else
    //     {
    //         Snackbar.Add("Fatura bulunamadı.", Severity.Warning);
    //     }
    // }

}
