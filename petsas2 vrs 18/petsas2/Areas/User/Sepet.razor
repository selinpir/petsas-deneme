@* 
tam gibi eksik yok sanki *@
@page "/user/Sepetim"
@attribute [Authorize]
@attribute [Authorize(Roles = "User")]

@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using petsas2.Models
@using petsas2.Services.Interface

@inject IHesapService HesapService
@inject ISepetService SepetService
@inject IProductService ProductService
@inject IPricingService PricingService

@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudGrid GutterSize="2">
    <MudItem xs="12">
        <MudTextField T="string"
                      Value="ReadOnly"
                      Label="Şu Anda Buradasınız"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudItem>
</MudGrid>

<MudTable Items="@sepet" Hover="true" Striped="true" Bordered="true">

    <HeaderContent>
        <MudTh>Ürün Adı</MudTh>
        <MudTh>Ürün Görseli</MudTh>
        <MudTh>Fiyat</MudTh>
        <MudTh>Adet</MudTh>
        <MudTh>Toplam Tutar</MudTh>
        <MudTh>Sepetten Sil</MudTh>
    </HeaderContent>

    <RowTemplate Context="s">
        @*URUNUN ADI*@
        <MudTd>@s.UrunAd</MudTd>
        @*URUNUN GORSELİ*@
        <MudTd>
            @if (!string.IsNullOrWhiteSpace(s.Gorsel))
            {
                <img src="@s.Gorsel"
                     alt="Ürün Görseli"
                     style="width:60px; height:60px; object-fit:cover; border-radius:4px;" />
            }
        </MudTd>
        @*URUNUN FİYATI*@
        <MudTd>@($"{s.BrutFiyat:N2} TL")</MudTd>
        @*URUNUN ADETİ*@
        <MudTd>
            <MudNumericField T="int"
                             Value="@s.Adet"
                             Min="1"
                             Max="3"
                             Immediate="true"
                             ValueChanged="@(async (v) => await AdetDegisti(s, v))" />
        </MudTd>
        @*SATIRIN TOPLAM TUTARI*@      
        <MudTd>@($"{s.Adet * s.BrutFiyat:N2} TL") </MudTd>
        @* sepetten sil *@
        <MudIconButton Icon="@Icons.Material.Filled.Delete"
                       Color="Color.Error"
                       OnClick="() => UrunSil(s.UrunID)" />
    </RowTemplate>
</MudTable>

@* SEEPTİN TOPLAM TUTARI*@
@* <MudText Typo="Typo.h6">@($"{kullaniciSepet.SepetToplamTutar:N2}")</MudText> *@
@if (kullaniciSepet != null)
{
    <MudText Typo="Typo.h6">
        Sepet Toplam: @($"{kullaniciSepet.SepetToplamTutar:N2} TL")
    </MudText>
}
else
{
    <MudText>Sepet boş veya yüklenemedi.</MudText>
}

@* Siparişi Tamamla *@
<MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
           OnClick="@SiparisiTamamlaAsync">
    Siparişi Tamamla
</MudButton>
@* Siparişi Tamamla *@

@code {
    public string ReadOnly { get; set; } = "Sepetim";
    List<SepetDetay>? sepet;

    private List<SepetDetay> SepetDetaylar = new();

    private KullaniciSepet kullaniciSepet;

    protected override async Task OnInitializedAsync()
    {
        kullaniciSepet = await SepetService.SepetUrunleriAsync();
        sepet = await SepetService.GetSepetUrunleriAsync();
    }

    //adet azalt arttır
    private async Task AdetDegisti(SepetDetay detay, int yeniAdet)
    {
        detay.Adet = yeniAdet;
        var sonuc = await SepetService.UrunAdetGuncelleAsync(detay.UrunID, yeniAdet);

        if (sonuc)
        {
            // toplam tutar ya da başka değerler değiştiyse onları da güncelle
            StateHasChanged();
        }
    }

    //sil
    private async Task UrunSil(int productId)
    {
        var sonuc = await SepetService.UrunCikarAsync(productId);
        if (sonuc)
        {
            SepetDetaylar.RemoveAll(x => x.UrunID == productId);
            await InvokeAsync(StateHasChanged);
        }
    }

    //siparişi tamamla
    private async Task SiparisiTamamlaAsync()
    {
        var kullanici = await HesapService.GetCurrentUserHesapAsync();

        if (kullanici == null || !kullanici.IsCompleted)
        {
            Snackbar.Add("Lütfen önce hesap ve adres bilgilerinizi doldurunuz.", Severity.Warning);
            Navigation.NavigateTo("/user/Profile"); // yönlendirme
            return;
        }

        Navigation.NavigateTo("/siparis/SiparisiTamamla");
    }
    //siparişi tamamla=adresi ve ürünleri onayla-> odemeyi tamamla->sipariş alınmıştır
}