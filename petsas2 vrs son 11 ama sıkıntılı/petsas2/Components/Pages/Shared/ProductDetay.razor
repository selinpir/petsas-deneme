@* URUN DETAY  *@
@using petsas2.Models
@using petsas2.Services
@using petsas2.Services.Interface
@inject IProductService ProductService

<style>   

    .container, .bootdey {
        max-width: 1050px;
        margin: auto;
    }

    .pro-img-details img {
        width: 100%;
        border-radius: 16px;
        box-shadow: 0 2px 14px rgba(120,110,180,0.10);
        object-fit: cover;
    }

    .pro-d-title {
        font-size: 1.6rem;
        font-weight: 600;
        color: #2A3542;
        letter-spacing: 0.03em;
        margin-bottom: 14px;
        margin-top: 0;
    }

    .product_meta {
        border-top: 1px solid #e3e3e3;
        border-bottom: 1px solid #e3e3e3;
        padding: 14px 0 8px 0;
        margin: 22px 0 18px 0;
    }

        .product_meta span {
            display: block;
            margin-bottom: 7px;
            color: #545454;
            font-size: 1rem;
            letter-spacing: .03em;
        }

        .product_meta strong {
            color: #f57b51;
            font-weight: 700;
            margin-right: 3px;
        }

        .product_meta a {
            color: #495057;
            text-decoration: none;
            font-weight: 500;
            border-radius: 5px;
            padding: 1px 6px;
            transition: background 0.14s;
        }

            .product_meta a:hover {
                background: #f8e7d6;
                color: #e67e22;
            }

    .pro-price {
        font-size: 1.3rem;
        font-weight: 700;
        letter-spacing: 0.04em;
        /*     background: #f9e3e3; */
        border-radius: 8px;
        padding: 7px 15px;
        display: inline-block;
    }

    .adtocart, .btn-danger {
        background: linear-gradient(95deg, #f57b51 70%, #fc5959 100%);
        color: #fff;
        font-weight: 600;
        border-radius: 25px;
        padding: 10px 34px 10px 28px;
        font-size: 1.09rem;
        border: none;
        box-shadow: 0 2px 10px rgba(252, 89, 89, 0.14);
        transition: background .2s, box-shadow .2s;
    }

        .adtocart:hover, .btn-danger:hover {
            background: linear-gradient(95deg, #fbb18a 50%, #fda085 100%);
            color: #fff;
            box-shadow: 0 4px 14px rgba(252, 89, 89, 0.22);
        }

        .adtocart i, .btn-danger i {
            font-size: 1.3rem;
            vertical-align: middle;
            margin-right: 7px;
        }

    .quantity {
        width: 130px;
        padding: 6px 10px;
        border-radius: 7px;
        border: 1px solid #ddd;
        font-size: 1.04rem;
    }

    .pro-d-title {
        font-size: 1.2rem;
    }

</style>

<div class="container bootdey">
    <div class="container mt-4">
        <div class="row">
            @* <div> <h1> @Category.PetType -> @SubCategory.ProductName  </h1>  </div> *@
            <div class="col-md-6">
                <div class="pro-img-details">
                    <img class="pic-1" src="@ImageUrl1" alt="@Name" />
                </div>
            </div>
            <div class="col-md-6">

                <h4 class="pro-d-title">
                    @Name
                </h4>
                <p>@Description</p>
                <div class="product_meta">
                    @if (Category != null)
                    {
                        <span class="posted_in"><strong>Kategori:</strong> <a rel="tag">@Category.PetType</a> </span>
                    }
                    @if (SubCategory != null)
                    {
                        <span class="posted_in"><strong>Alt Kategori:</strong> <a rel="tag">@SubCategory.ProductName</a></span>
                    }
                    @if (Brand != null)
                    {
                        <span class="posted_in"><strong>Marka:</strong> <a rel="tag">@Brand.Name</a></span>
                    }
                    @if (Barcode != null)
                    {
                        <span class="posted_in"><strong>Barkod:</strong> <a rel="tag">@Barcode</a></span>
                    }
                    @if (ExpirationDate != null)
                    {
                        <span class="posted_in"><strong>Son Kullanma Tarihi :</strong> <a rel="tag">@ExpirationDate?.ToString("dd.MM.yyyy")</a></span>
                    }
                    @if (!string.IsNullOrWhiteSpace(Color))
                    {
                        <span class="posted_in"><strong>Renk : </strong> <a rel="tag">@Color</a></span>
                    }
                    @if (Weight != null)
                    {
                        <span class="posted_in"><strong>Ağırlık :</strong> <a rel="tag">@Weight</a></span>
                    }
                    @if (!string.IsNullOrWhiteSpace(Dimensions))
                    {
                        <span class="posted_in"><strong>Ebat : </strong> <a rel="tag">@Dimensions</a></span>
                    }
                    @if (!string.IsNullOrWhiteSpace(Size))
                    {
                        <span class="posted_in"><strong>Beden :</strong> <a rel="tag">@Size</a></span>
                    }
                    @if (!string.IsNullOrWhiteSpace(Material))
                    {
                        <span class="posted_in"><strong>Malzeme :</strong> <a rel="tag">@Material</a></span>
                    }
                </div>
                <div class="m-bot15"> <strong>Fiyat : </strong> <span class="pro-price">@($"{BrutFiyat:N2} TL")</span></div>
                <br />
                <p>
                    <button class="btn btn-round btn-danger" type="button" @onclick="SepeteEkle">
                        <i class="fa fa-shopping-cart"></i> Sepete Ekle
                    </button>
                </p>
            </div>
        </div>
    </div>
</div>
<MudDivider />
<br />
<br />

@* diğer ürünler *@
<MudText Typo="Typo.h3">İlginizi Çekebilecek Diğer Ürünler</MudText>
<OtherProducts Products="randomProducts" />
@* diğer ürünler *@

@code {
    [Parameter] public string Name { get; set; }
    [Parameter] public string ImageUrl1 { get; set; }
    [Parameter] public string? Description { get; set; }

    [Parameter] public Category Category { get; set; }
    [Parameter] public SubCategory SubCategory { get; set; }
    [Parameter] public Brand Brand { get; set; }
    [Parameter] public Guid? Barcode { get; set; }
    [Parameter] public DateTime? ExpirationDate { get; set; }
    [Parameter] public string? Color { get; set; }
    [Parameter] public decimal? Weight { get; set; }
    [Parameter] public string? Dimensions { get; set; }
    [Parameter] public string? Size { get; set; }
    [Parameter] public string? Material { get; set; }

    [Parameter] public decimal BrutFiyat { get; set; }

    [Parameter] public EventCallback SepeteEkle { get; set; }

    //ürün detay sayfasının altında balabileceğiniz diğer ürünler yapısının oluşturulması için 2207
    private List<Product> randomProducts = new();
    protected override async Task OnInitializedAsync()
    {
        // Detaydan bağımsız 4 rastgele ürün getir
        randomProducts = await ProductService.GetRandomProductsAsync(4);
    }

}
