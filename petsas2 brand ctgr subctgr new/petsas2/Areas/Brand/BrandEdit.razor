@* marka adını güncelle- markanın isim değiştirmesi senaryosunda-soft delete gibi değil isim tamamen değişir her yerde *@

@page "/Brand/BrandEdit/{id:int}"
@using Microsoft.AspNetCore.Authorization
@using petsas2.Services

@attribute [Authorize(Roles = "Admin,Supplier")]
@using MudBlazor
@using petsas2.Models
@using petsas2.Services.Interface
@using static MudBlazor.Icons.Material
@inject IBrandService BrandService
@inject NavigationManager Navigation

<MudGrid GutterSize="2">
    <MudItem xs="12">
        <MudTextField T="string"
                      Value="ReadOnly"
                      Label="Şu Anda Buradasınız"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudItem>
</MudGrid>


@if (brand == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudPaper Class="p-4">
        <MudTextField @bind-Value="brand.Name" Label="Marka Adı" Variant="Variant.Outlined" />

        <div class="mt-3 d-flex gap-2">
            <MudButton Color="Color.Secondary" OnClick="Cancel">İptal</MudButton>
            <MudButton Color="Color.Primary" OnClick="UpdateBrand">Güncelle</MudButton>
        </div>
    </MudPaper>
}

@code {
    public string ReadOnly { get; set; } = "Marka Düzenle";

    [Parameter]
    public int id { get; set; }

    private Brand? brand;

    protected override async Task OnInitializedAsync()
    {
        brand = await BrandService.GetByIdAsync(id);
    }

    private async Task UpdateBrand()
    {
        if (brand != null)
        {
            await BrandService.UpdateAsync(brand);
            Navigation.NavigateTo("/Brand/BrandIndex");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/Brand/BrandIndex");
    }
}
